dark_file='~/data/data_archive/sphere_sam_July15/Calib/SPHERE_IRDIFS_IRDIS_CAL_BCKG183_0006.fits'
save_name='~/data/data_archive/sphere_sam_July15/fake_irdis_flat_256.idlvar'

im=readfits(dark_file)
repeats=2
sig=7 ;; number of sigma (5 sigma means on average 2 good pixels flagged bad)
output_sz=[2048,256]

hot_pix=[]
cold_pix=[]

for rep =0,repeats-1 do begin
    med=median(im)
    std=median(abs(im-med))

    new_hot_pix=where(im[*,*,0] gt (sig*std+med))
    new_cold_pix=where(im[*,*,0] lt (-sig*std+med))

    hot_pix=[hot_pix,new_hot_pix]
    cold_pix=[cold_pix,new_cold_pix]
endfor
bad_pixels=[cold_pix,hot_pix]
flat=1+dblarr(2048,1024)

;; and some things to test
test=im[*,*,0]
test[hot_pix]=med
test[cold_pix]=med
bad_map=flat-1
bad_map[bad_pixels]=1.

if output_sz[0] ne 2048 or output_sz[1] ne 1024 then begin
    yoffset=17
    bad_map=bad_map[*,512-output_sz[1]/2+yoffset:512+output_sz[1]/2-1+yoffset]
    flat=flat[*,512-output_sz[1]/2+yoffset:512+output_sz[1]/2-1+yoffset]
    ; stop
    bad_pixels=where(bad_map eq 1)
endif

; ;; HACKS
; im2=readfits('~/data/data_archive/sphere_sam_July15/Raw_Fomalhaut_IRDIS/SPHERE_IRDIS_OBS184_0057.fits')
; im2=im2[0:255,*,0]
; guess=where(im2 gt 1e2)
; guess_map=fltarr(256,256)
; guess_map[guess]=1

; ystart=512
; tots=fltarr(768)
; big_bad_map=bad_map
; for ystart=0,767 do begin
;     bad_map=big_bad_map[0:255,ystart:ystart+255]
;     ; print,ystart,ystart+255
;     tots[ystart]=total(guess_map*bad_map)
;     ; stop 
;     ; if (ystart mod 10) then begin
;     ; !p.multi=[0,2,2]
;     ; image_cont,guess_map,/n,/a
;     ; image_cont,bad_map,/n,/a
;     ; image_cont,bad_map*guess_map,/n,/a
;     ; image_cont,bad_map+guess_map,/n,/a
;     ; wait,0.05
;     ; endif
; endfor
; image_cont,bad_map+guess_map,/n,/a


save,flat,bad_pixels,file=save_name

end